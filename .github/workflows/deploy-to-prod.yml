name: Deploy to Prod and e2e test to prod

on:
  push:
    branches:
      - master
      - feature/*

jobs:
  # this is needed to wait for the new docker image to be build and published to the registry
  # so that we can use the image to run ui of the needed commit related version as part of local-env
  # the idea is taken from here https://stackoverflow.com/a/71489231
  push_to_registry:
    uses: ./.github/workflows/docker-build-and-push.yml
    # without this it cannot login to the registry
    secrets: inherit

  deploy-to-prod:
    name: Deploy service to k8s for prod environment  
    needs: [push_to_registry]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Create default global .kube/config file
        run: |
          cd $HOME
          mkdir .kube
          echo "${{ secrets.DEV_KUBECONFIG }}" > .kube/config

      - name: Deploy
        uses: helmfile/helmfile-action@v1.9.0
        with:
          helmfile-version: 'v0.164.0'
          helm-version: 'v3.18.0'
          helmfile-args: >
            apply --suppress-diff --namespace dev-inner-circle -f ci/helmfile.yaml 
            --state-values-set image.tag=sha-${{ github.sha }} 
            --state-values-set ingress.hostname=${{ secrets.DEV_HOST }}
            --state-values-set extraConfigMapEnvVars.API_ROOT='/api'
            --state-values-set extraConfigMapEnvVars.VITE_BASE_URL=${{ secrets.BASE_URL }}
          helmfile-auto-init: "false"       

  e2e-test-prod:
    runs-on: ubuntu-22.04
    container: cypress/browsers:node-22.18.0-chrome-138.0.7204.183-1-ff-141.0-edge-138.0.3351.121-1
    needs: [deploy-to-prod]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: E2E test on prod
        uses: cypress-io/github-action@v5
        with:
          browser: electron
          record: true
          parallel: true
          group: "Electron e2e prod"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_BASE_URL: 'http://localhost:30090'
          API_ROOT: '/api'
          VITE_BASE_URL: ${{ secrets.BASE_URL }}
          USER_LOGIN: ${{ secrets.DEV_USER_LOGIN }}
          USER_PASSWORD: ${{ secrets.DEV_USER_PASSWORD }}

      - name: Upload videos of tests failed 
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: |
            cypress/videos/*.mp4
            cypress/screenshots/**/*.png